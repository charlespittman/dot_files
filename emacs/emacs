;; Use a separate file for customizations made through Customize
(setq custom-file "~/.emacs.d/custom.el")
(load custom-file)

;; Turn off mouse interface early in startup to avoid momentary display
(when (fboundp 'tool-bar-mode) (tool-bar-mode -1))
(when (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))

(setq inhibit-startup-screen t)

;; Set repos for package manager
(require 'package)
(setq package-archives '(("gnu" . "http://elpa.gnu.org/packages/")
                         ("marmalade" . "http://marmalade-repo.org/packages/")
                         ("melpa" . "http://melpa.milkbox.net/packages/")))
(package-initialize)

(require 'site-gentoo)

;; Turn on syntax highlighting globally
(global-font-lock-mode t)

;; Shorten confirmation prompts
(defalias 'yes-or-no-p 'y-or-n-p)

;; Don't make *.~ files
(setq make-backup-files nil)

(show-paren-mode t)
(eldoc-mode t)

;; Removing trailing whitespace every time a file is saved.
(add-hook 'before-save-hook 'delete-trailing-whitespace)

;; (autoload 'Lorem-ipsum-insert-paragraphs "lorem-ipsum" "" t)
;; (autoload 'Lorem-ipsum-insert-sentences "lorem-ipsum" "" t)
;; (autoload 'Lorem-ipsum-insert-list "lorem-ipsum" "" t)

(setq TeX-PDF-mode t)

;; No tabs.  Just use spaces.
(setq-default indent-tabs-mode nil)

;; make typing overwrite text selection
(delete-selection-mode t)

;; turn on automatic bracket insertion by pairs.
;;(electric-pair-mode t)

(global-visual-line-mode t)

(setq make-backup-files nil) ; stop creating those backup~ files
(setq auto-save-default nil) ; stop creating those #auto-save# files

;;; Lisp (SLIME) interaction
(load (expand-file-name "~/quicklisp/slime-helper.el"))
;; Replace "sbcl" with the path to your implementation
(setq inferior-lisp-program "sbcl")
(add-to-list 'load-path "~/.slime")

;; (add-hook 'flycheck-mode-hook 'flycheck-color-mode-line-mode)

(require 'use-package)

(use-package color-theme-sanityinc-tomorrow
  :ensure t
  :config (load-theme 'sanityinc-tomorrow-bright))

(use-package ruby-mode
  :mode "\\.rb\\'"
  :interpreter "ruby")

(use-package python
  :mode ("\\.py\\'" . python-mode)
  :config
  (use-package elpy
    :ensure t
    :config
    (progn
      (elpy-enable)
      (elpy-use-ipython)
      (elpy-clean-modeline))))

;; Start mail-mode for any file with 'mutt' in the name.
(add-to-list 'auto-mode-alist '("/mutt" . mail-mode))

(add-to-list 'auto-mode-alist '("\\zsh\\'" . shell-script-mode))

(add-to-list 'load-path "~/.emacs.d/elisp/")
(load-library "keys")
